{"version":3,"file":"static/js/936.f0b8fdf3.chunk.js","mappings":"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","sources":["api/Api.jsx","webpack://react-homework-template/./src/components/Pagination/Pagination.module.css?4da5","components/Pagination/Pagination.jsx","webpack://react-homework-template/./src/components/ScrollBtn/ScrollBtn.module.css?f6c6","components/ScrollBtn/ScrollBtn.jsx","webpack://react-homework-template/./src/pages/Home/Home.module.css?1370","pages/Home/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst url = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'ddd8814addf1eaac90b3b416df51b9bc',\n  },\n});\n\nexport async function getTrendingMovies() {\n  const getUrl = `/trending/movie/week`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data.results;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function searchMovies(movieName) {\n  // const getUrl = `/search/movie`;\n  const getUrl = `/search/movie?query=${movieName}`;\n  try {\n    const { data } = await url.get(getUrl);\n    // const { data } = await url.get(getUrl, {params: { query: movieName }, });\n\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getDetailsMovies(id) {\n  const getUrl = `/movie/${id}`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getCreditsMovies(id) {\n  const getUrl = `/movie/${id}/credits`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getReviewsMovies(id) {\n  const getUrl = `/movie/${id}/reviews`;\n  try {\n    const { data } = await url.get(getUrl);\n    return data;\n  } catch (error) {\n    throw error;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"Pagination_pagination__vcNDC\",\"pageItem\":\"Pagination_pageItem__JqCQg\",\"pageLink\":\"Pagination_pageLink__C8Iez\",\"currentPage\":\"Pagination_currentPage__IVc9B\",\"prevButton\":\"Pagination_prevButton__SXBaf\",\"nextButton\":\"Pagination_nextButton__Ga9Xs\",\"iconWrapper\":\"Pagination_iconWrapper__4-3yX\"};","import React from 'react';\nimport css from './Pagination.module.css';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\n\nconst Pagination = ({ moviesPerPage, totalMovies, currentPage, paginate }) => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(totalMovies / moviesPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const maxVisibleButtons = 4;\n  let visiblePageNumbers = pageNumbers;\n\n  if (pageNumbers.length > maxVisibleButtons) {\n    const startIndex =\n      currentPage > maxVisibleButtons - 2\n        ? currentPage - maxVisibleButtons + 2\n        : 0;\n\n    visiblePageNumbers = pageNumbers.slice(\n      startIndex,\n      startIndex + maxVisibleButtons - 2\n    );\n  }\n\n  return (\n    <nav>\n      <ul className={css.pagination}>\n        <li className={css.pageItem}>\n          <button\n            onClick={() => paginate(currentPage - 1)}\n            className={`${css.pageLink} ${css.prevNextLink} ${css.prevButton}`}\n            disabled={currentPage === 1}\n          >\n            <span className={css.iconWrapper}>\n              <FaChevronLeft className={css.arrowIcon} />\n            </span>\n          </button>\n        </li>\n\n        {currentPage > maxVisibleButtons - 2 && (\n          <li className={css.pageItem}>\n            <button className={css.pageLink} disabled>\n              ...\n            </button>\n          </li>\n        )}\n\n        {visiblePageNumbers.map(number => (\n          <li key={number} className={css.pageItem}>\n            <button\n              onClick={() => paginate(number)}\n              className={\n                currentPage === number ? css.currentPage : css.pageLink\n              }\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n\n        {currentPage + maxVisibleButtons - 2 < pageNumbers.length && (\n          <li className={css.pageItem}>\n            <button className={css.pageLink} disabled>\n              ...\n            </button>\n          </li>\n        )}\n\n        <li className={css.pageItem}>\n          <button\n            onClick={() => paginate(currentPage + 1)}\n            className={`${css.pageLink} ${css.prevNextLink} ${css.nextButton}`}\n            disabled={currentPage === pageNumbers.length}\n          >\n            <span className={css.iconWrapper}>\n              <FaChevronRight className={css.arrowIcon} />\n            </span>\n          </button>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","// extracted by mini-css-extract-plugin\nexport default {\"scroll\":\"ScrollBtn_scroll__YyOpG\",\"scrollButton\":\"ScrollBtn_scrollButton__1uLC3\"};","import React, { useState, useEffect } from 'react';\nimport { MdKeyboardArrowUp } from 'react-icons/md';\n\nimport css from './ScrollBtn.module.css';\n\nconst ScrollBtn = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrolled = window.pageYOffset;\n      if (scrolled > 200) {\n        setIsVisible(true);\n      } else {\n        setIsVisible(false);\n      }\n    };\n\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n  };\n\n  return (\n    <>\n      {isVisible && (\n        <div className={css.scroll} onClick={scrollToTop}>\n          <MdKeyboardArrowUp fontSize=\"large\" />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ScrollBtn;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"Home_text__YlQ2v\",\"list\":\"Home_list__aopnc\",\"item\":\"Home_item__hquEN\",\"box\":\"Home_box__BGP+V\",\"img\":\"Home_img__6O+7s\",\"itemName\":\"Home_itemName__cwARh\"};","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingMovies } from '../../api/Api';\nimport PropTypes from 'prop-types';\nimport css from './Home.module.css';\nimport noPoster from '../../img/noPoster.jpg';\nimport Pagination from 'components/Pagination/Pagination';\nimport ScrollBtn from '../../components/ScrollBtn/ScrollBtn';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [moviesPerPage, setMoviesPerPage] = useState(10);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const movies = await getTrendingMovies();\n        setMovies(movies);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, []);\n\n  useEffect(() => {\n    const handleResize = () => {\n      const width = window.innerWidth;\n      if (width >= 768 && width <= 1023) {\n        setMoviesPerPage(8);\n      } else if (width >= 320 && width <= 767) {\n        setMoviesPerPage(6);\n      } else {\n        setMoviesPerPage(10);\n      }\n    };\n\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  const indexOfLastMovie = currentPage * moviesPerPage;\n  const indexOfFirstMovie = indexOfLastMovie - moviesPerPage;\n  const currentMovies = movies.slice(indexOfFirstMovie, indexOfLastMovie);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  if (movies.length === 0) {\n    return;\n  }\n\n  return (\n    <>\n      <div>\n        <h2 className={css.text}>Trending films this week:</h2>\n        <ul className={css.list}>\n          <li>\n            {currentMovies.map(({ id, title, poster_path }) => {\n              return (\n                <Link\n                  key={id}\n                  to={`movies/${id}`}\n                  state={{ from: location }}\n                  className={css.link}\n                >\n                  <li key={id} className={css.item}>\n                    <img\n                      className={css.img}\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                          : noPoster\n                      }\n                      alt=\"Poster\"\n                      height=\"400\"\n                    />\n                    <p className={css.itemName}>{title}</p>\n                  </li>\n                </Link>\n              );\n            })}\n          </li>\n        </ul>\n        <Pagination\n          moviesPerPage={moviesPerPage}\n          totalMovies={movies.length}\n          currentPage={currentPage}\n          paginate={paginate}\n        />\n        <ScrollBtn />\n      </div>\n    </>\n  );\n};\n\nHome.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Home;\n"],"names":["url","axios","baseURL","params","api_key","getTrendingMovies","get","data","results","searchMovies","movieName","getUrl","getDetailsMovies","id","getCreditsMovies","getReviewsMovies","moviesPerPage","totalMovies","currentPage","paginate","pageNumbers","i","Math","ceil","push","visiblePageNumbers","length","startIndex","maxVisibleButtons","slice","className","css","onClick","disabled","map","number","useState","isVisible","setIsVisible","useEffect","handleScroll","scrolled","window","pageYOffset","addEventListener","removeEventListener","scrollTo","top","behavior","fontSize","movies","setMovies","setCurrentPage","setMoviesPerPage","location","useLocation","getMovies","console","log","handleResize","width","innerWidth","indexOfLastMovie","indexOfFirstMovie","currentMovies","title","poster_path","to","state","from","src","noPoster","alt","height","Pagination","pageNumber","ScrollBtn"],"sourceRoot":""}